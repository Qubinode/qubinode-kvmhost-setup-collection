---
- name: Ensure ~/.config exist
  become: true
  ansible.builtin.file:
    path: "/home/{{ admin_user }}/.config"
    state: directory
    owner: "{{ admin_user }}"
    group: "wheel"
    mode: "0755"

- name: Deploy startship config for current user
  become: true
  become_user: "{{ admin_user }}"
  ansible.builtin.template:
    src: starship.toml.j2
    dest: "/home/{{ admin_user }}/.config/starship.toml"
    owner: "{{ admin_user }}"
    group: "wheel"
    mode: "0644"

- name: Deploy bash_profile for current user
  become: true
  become_user: "{{ admin_user }}"
  ansible.builtin.template:
    src: bash_profile.j2
    dest: "/home/{{ admin_user }}/.bash_profile"
    owner: "{{ admin_user }}"
    group: "wheel"
    mode: "0644"

- name: Create ~/.vim/autoload directory if it doesn't exist
  ansible.builtin.file:
    path: "/home/{{ admin_user }}/.vim/autoload"
    state: directory
    mode: '0755'
    owner: "{{ admin_user }}"
    group: "wheel"
  become: true

- name: Install vimplug plugin manager
  become: true
  become_user: "{{ admin_user }}"
  vars:
    plug_url: https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim
  ansible.builtin.get_url:
    url: "{{ plug_url }}"
    dest: "/home/{{ admin_user }}/.vim/autoload/plug.vim"
    mode: "0644"

- name: Deploy bashrc for current user
  become: true
  become_user: "{{ admin_user }}"
  vars:
    synth_shell_dir: "/home/{{ admin_user }}/.config"
  ansible.builtin.template:
    src: bashrc.j2
    dest: "/home/{{ admin_user }}/.bashrc"
    owner: "{{ admin_user }}"
    group: "wheel"
    mode: "0644"

- name: Deploy vimrc for current user
  become: true
  ansible.builtin.shell: |
    echo "{{ ansible_user_id }}"
  register: current_user
  changed_when: false

- name: Deploy vimrc for admin user
  ansible.builtin.template:
    src: vimrc.j2
    dest: "/home/{{ admin_user }}/.vimrc"
    owner: "{{ admin_user }}"
    group: "wheel"
    mode: "0644"
  when: current_user.stdout != admin_user

- name: Download vim.zip
  ansible.builtin.get_url:
    url: "{{ download_vim_url }}"
    dest: "/tmp/vim.zip"
    mode: "0775"
  when: current_user.stdout != admin_user

- name: Extract vim.zip
  ansible.builtin.unarchive:
    src: "/tmp/vim.zip"
    dest: "/home/{{ admin_user }}/"
    owner: "{{ admin_user }}"
    group: "wheel"
    mode: "0755"
    remote_src: true
  when: current_user.stdout != admin_user

- name: Deploy vimrc for root user
  ansible.builtin.template:
    src: vimrc.j2
    dest: "/root/.vimrc"
    owner: root
    group: "wheel"
    mode: "0644"
  when: current_user.stdout == admin_user

- name: Download /root/vim.zip
  ansible.builtin.get_url:
    url: "{{ download_vim_url }}"
    dest: "/root/vim.zip"
    mode: "0775"
  when: current_user.stdout == admin_user

- name: Extract .vim for admin user
  become: true
  become_user: "/root/"
  ansible.builtin.unarchive:
    src: vim.zip
    dest: "/root/"
    owner: "/root"
    group: "wheel"
  when: current_user.stdout == admin_user

- name: Check if powerline font is installed
  become: true
  become_user: "{{ admin_user }}"
  ansible.builtin.stat:
    path: "/home/{{ admin_user }}/.local/share/fonts/ter-powerline-x12b.pcf.gz"
  register: powerline_font

- name: Install powerline fonts
  when: powerline_font.stat.exists
  become: true
  become_user: "{{ admin_user }}"
  block:
    - name: Ensure ~/.config/fontconfig/conf.d
      ansible.builtin.file:
        path: "/home/{{ admin_user }}/.config/fontconfig/conf.d"
        state: directory
        mode: '0755'

    - name: Download powerline fonts
      ansible.builtin.git:
        repo: 'https://github.com/powerline/fonts.git'
        dest: "{{ tempdir_kvmhost_path }}/fonts"
        version: master

    - name: Download powerline fontconfig
      ansible.builtin.get_url:
        url: https://raw.githubusercontent.com/powerline/fonts/master/fontconfig/50-enable-terminess-powerline.conf
        dest: "/home/{{ admin_user }}/.config/fontconfig/conf.d/50-enable-terminess-powerline.conf"
        mode: "0644"
      become: true
      become_user: "{{ ansible_user }}"

    - name: Set executable bit on powerline fonts install.sh script
      ansible.builtin.file:
        path: "{{ lookup('file', tempdir_kvmhost_path + '/fonts/install.sh') }}"
        mode: u+x

    - name: Run powerline fonts install.sh
      ansible.builtin.command: "{{ tempdir_kvmhost_path }}/fonts/install.sh"
      args:
        chdir: "{{ tempdir_kvmhost_path }}/fonts"
        creates: "/home/{{ admin_user }}/.local/share/fonts/ter-powerline-x12b.pcf.gz"
